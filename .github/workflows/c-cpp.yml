name: C/C++ CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

# https://github.com/git-lfs/git-lfs/issues/5749
env:
  GIT_CLONE_PROTECTION_ACTIVE: false

jobs:
  cmake-build:
      strategy:
        fail-fast: false
        matrix:
          config:
          - {
              name: "Windows - MSVC 2022",
              os: windows-latest,
              build_type: "Debug",
              cc: "cl",
              cxx: "cl",
              generators: "Visual Studio 17 2022",
            }
          - {
              name: "Ubuntu - Clang",
              os: ubuntu-latest,
              build_type: "Debug",
              cc: "clang-15",
              cxx: "clang++-15",
              generators: "Unix Makefiles",
            }
      runs-on: ${{ matrix.config.os }}

      steps:
        - uses: actions/checkout@v4
          with:
            submodules: recursive

        - if: startsWith(matrix.config.os, 'windows')
          run: |
            git config --system core.longpaths true
            New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem" -Name "LongPathsEnabled" -Value 1 -PropertyType DWORD -Force
          shell: pwsh

        - if: startsWith(matrix.config.os, 'ubuntu')
          run: |
            sudo sed -i 's/azure\.//' /etc/apt/sources.list
            sudo apt-get update
            sudo apt-get install -y gcc-12 clang-15 xorg-dev libxinerama-dev libxcursor-dev libgles2-mesa-dev libegl1-mesa-dev libglfw3-dev libglew-dev libstdc++-12-dev extra-cmake-modules libxkbcommon-x11-dev wayland-protocols libtbb-dev
            sudo apt remove cmake -y
            sudo pip install cmake --upgrade

        - name: Install Vulkan SDK
          uses: jakoch/install-vulkan-sdk-action@v1.2.5
          with:
            vulkan_version: 1.4.309.0
            install_runtime: true
            cache: true
            stripdown: true

        - name: Get the number of CPU cores
          uses: SimenB/github-actions-cpu-cores@v1

        - name: Run 'deploy_deps.py'
          run: python deploy_deps.py

        - name: Run 'LightweightVK deploy_deps.py'
          run: |
            cd deps/src/lightweightvk
            python deploy_deps.py

        - name: Build
          shell: bash
          env:
            CC:  ${{ matrix.config.cc }}
            CXX: ${{ matrix.config.cxx }}
          run: |
            cmake ${{ env.CMAKE_GENERATOR }} -S "${{ github.workspace }}" -B ~/build ${{ matrix.config.cmake_args }}
            cd ~/build
            cmake --build . --parallel ${{ steps.cpu-cores.outputs.count }}
